{"ast":null,"code":"var _jsxFileName = \"/home/hix/PROJECTS/REACT/messaging-application/src/Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./Sidebar.css\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { DonutLarge } from '@material-ui/icons';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SidebarChats from './SidebarChats';\nimport db from './firebase';\nimport { auth, provider } from \"./firebase\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useStateValue } from './StateProvider'; // import SidebarChat from './SidebarChat'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nfunction Sidebar() {\n  _s();\n\n  const [rooms, setRooms] = useState([]);\n  const [{\n    user\n  }] = useStateValue();\n  const [inputvalue, setInput] = useState(''); //  method to capture our message\n\n  const AddNewChat = () => {\n    const chatname = prompt(\"Enter your message here\");\n\n    if (chatname) {\n      db.collection('Rooms').add({\n        name: chatname\n      });\n      const audio = new Audio('https://drive.google.com/uc?export=download&id=1M95VOpto1cQ4FQHzNBaLf0WFQglrtWi7');\n      audio.play();\n      toast.success('Channel Successfully Created', {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  }; // React hook to render our channels from db\n\n\n  useEffect(() => {\n    const unsubscribe = db.collection('Rooms').onSnapshot(snap => {\n      setRooms(snap.docs.map(doc => ({\n        data: doc.data(),\n        id: doc.id\n      })));\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []); //function to filter channels by names\n\n  const filterChannels = event => {\n    event.preventDefault();\n    let value = event.target.value.toLowerCase();\n    let result = [];\n    result = rooms.filter(res => {\n      return res.data.name.toLowerCase().search(value) != -1;\n    });\n    setRooms(result);\n  }; //refresh function\n\n\n  const refresh = () => {\n    db.collection('Rooms').onSnapshot(snap => {\n      setRooms(snap.docs.map(doc => ({\n        data: doc.data(),\n        id: doc.id\n      })));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"side-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: user === null || user === void 0 ? void 0 : user.photoURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: refresh,\n          children: /*#__PURE__*/_jsxDEV(DonutLarge, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-search\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: filterChannels,\n          type: \"text\",\n          placeholder: \"Search or start new chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-chats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: AddNewChat,\n        className: \"chat-head\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add New Channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), rooms.map(res => /*#__PURE__*/_jsxDEV(SidebarChats, {\n        id: res.id,\n        channelname: res.data.name\n      }, res.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sidebar, \"KgdmHyFvFT+pU18jrfqmDn2SBIQ=\", false, function () {\n  return [useStateValue];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/home/hix/PROJECTS/REACT/messaging-application/src/Sidebar.js"],"names":["React","useEffect","useState","Avatar","IconButton","DonutLarge","ChatIcon","MoreVertIcon","SearchIcon","SidebarChats","db","auth","provider","toast","useStateValue","configure","Sidebar","rooms","setRooms","user","inputvalue","setInput","AddNewChat","chatname","prompt","collection","add","name","audio","Audio","play","success","position","POSITION","TOP_RIGHT","unsubscribe","onSnapshot","snap","docs","map","doc","data","id","filterChannels","event","preventDefault","value","target","toLowerCase","result","filter","res","search","refresh","photoURL"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport \"./Sidebar.css\"\nimport {Avatar, IconButton} from \"@material-ui/core\"\nimport { DonutLarge } from '@material-ui/icons'\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SidebarChats from './SidebarChats';\nimport db from './firebase'\nimport {auth,provider} from \"./firebase\"\nimport {toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useStateValue } from './StateProvider';\n// import SidebarChat from './SidebarChat'\ntoast.configure();\n\nfunction Sidebar() {\n   const[rooms,setRooms]=useState([])\n   const[{user}]=useStateValue()\n   const[inputvalue,setInput]=useState('')\n\n\n  //  method to capture our message\n  const  AddNewChat =()=>{\n    const chatname= prompt(\"Enter your message here\")\n    if(chatname){\n        db.collection('Rooms').add({\n          name:chatname\n        })\n    const audio = new Audio('https://drive.google.com/uc?export=download&id=1M95VOpto1cQ4FQHzNBaLf0WFQglrtWi7');\n    audio.play();   \n    toast.success('Channel Successfully Created',{position:toast.POSITION.TOP_RIGHT})   \n    }\n }\n      // React hook to render our channels from db\n        useEffect(()=>{\n           const unsubscribe = db.collection('Rooms').onSnapshot(snap=>{\n              setRooms(snap.docs.map(doc=>(\n                {\n                 data:doc.data(),\n                 id:doc.id \n                }\n              )))\n           })\n\n           return ()=>{\n             unsubscribe()\n           }\n          \n        },[])\n \n\n          //function to filter channels by names\n          const filterChannels = (event) => {\n            event.preventDefault()\n            let value = event.target.value.toLowerCase();\n            let result = [];\n            result = rooms.filter((res) => {\n            return res.data.name.toLowerCase().search(value) != -1;\n            });\n            setRooms(result);\n            }\n\n\n\n           //refresh function\n          const refresh=()=>{\n            db.collection('Rooms').onSnapshot(snap=>{\n              setRooms(snap.docs.map(doc=>(\n                {\n                 data:doc.data(),\n                 id:doc.id \n                }\n              )))\n           })\n           }\n\n  return (\n    <div className=\"side-bar\">\n           <div className=\"sidebar-header\">\n               <Avatar src={user?.photoURL}/>\n               <div className=\"header-right\">\n                  <IconButton onClick={refresh}>\n                  < DonutLarge/>\n                  </IconButton>\n                  <IconButton>\n                  <ChatIcon/>\n                  </IconButton>\n                  <IconButton>\n                  <MoreVertIcon/>\n                 </IconButton>\n            </div>\n           </div>\n\n        <div className=\"sidebar-search\">\n          <div className=\"search-container\">\n            <SearchIcon/>\n            <input  onChange={filterChannels} type=\"text\" placeholder=\"Search or start new chat\"/>\n          </div>   \n        </div>\n\n        {/* side bar chats */}\n        <div className=\"sidebar-chats\">\n            <div onClick={AddNewChat}  className=\"chat-head\">\n              <h2>Add New Channel</h2>\n            </div>\n            {\n              rooms.map(res=>(\n                <SidebarChats key={res.id} id={res.id} channelname={res.data.name} />\n              ))\n            }\n            \n        </div>\n    </div>\n  )\n}\n\nexport default Sidebar\n"]},"metadata":{},"sourceType":"module"}