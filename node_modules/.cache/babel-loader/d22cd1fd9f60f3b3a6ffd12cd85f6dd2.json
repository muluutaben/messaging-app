{"ast":null,"code":"var _jsxFileName = \"/home/hix/PROJECTS/REACT/messaging-application/src/MainChat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./MainChat.css\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { DonutLarge, InsertEmoticon } from '@material-ui/icons';\nimport { useParams } from \"react-router-dom\";\nimport db from \"./firebase\";\nimport { auth } from \"./firebase\";\nimport { useStateValue } from './StateProvider';\nimport firebase from \"firebase\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport * as timeago from 'timeago.js'; // setting up dialog\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport InputEmoji from \"react-input-emoji\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\n\nfunction MainChat({\n  date\n}) {\n  _s();\n\n  var _messages, _messages$timestamp;\n\n  const [open, setOpen] = useState(false);\n  const {\n    roomId\n  } = useParams();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [{\n    user\n  }, dispatch] = useStateValue();\n  const [channelName, setChannel] = useState('');\n  const [img, setImg] = useState(''); //method to open dialog\n\n  const handleOpen = () => {\n    setOpen(true);\n  }; // method to close dialog\n\n\n  const handleClose = () => {\n    setOpen(false);\n  }; //react hook to change images in chatroom\n\n\n  useEffect(() => {\n    setImg(Math.floor(Math.random() * 5000));\n  }, [roomId]); //function to send message to our database\n\n  const sendMessage = e => {\n    e.preventDefault();\n    db.collection('Rooms').doc(roomId).collection('Messages').add({\n      text: message,\n      name: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    const audio = new Audio('https://drive.google.com/uc?export=download&id=1M95VOpto1cQ4FQHzNBaLf0WFQglrtWi7');\n    audio.play();\n    toast.success('Message Sent Successsfully', {\n      position: toast.POSITION.TOP_RIGHT\n    });\n    setMessage('');\n  }; //function to fetch messages from db (React Hook)\n\n\n  useEffect(() => {\n    if (roomId) {\n      db.collection('Rooms').doc(roomId).collection('Messages').orderBy('timestamp', 'asc').onSnapshot(snap => {\n        setMessages(snap.docs.map(doc => doc.data()));\n      }); // code to fetch details about the channel we are working with\n\n      db.collection('Rooms').doc(roomId).onSnapshot(snap => {\n        setChannel(snap.data().name);\n      });\n    }\n  }, [roomId]); //  function to logout of app\n\n  const logOut = () => {\n    auth.signOut();\n    dispatch({\n      type: 'SET_USER',\n      user: null\n    });\n    setOpen(false);\n  }; // function to clear chat messages\n\n\n  const clearMessages = () => {\n    if (roomId) {\n      db.collection('Rooms').doc(roomId).collection('Messages').get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          doc.ref.delete();\n        });\n      });\n    }\n\n    toast.success('Messages Cleared', {\n      position: toast.POSITION.TOP_RIGHT\n    });\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-field\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: `https://avatars.dicebear.com/api/human/${img}.svg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header_info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: channelName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last seen \\xA0\", messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"last-seen\",\n            children: [new Date((_messages = messages[messages.length - 1]) === null || _messages === void 0 ? void 0 : (_messages$timestamp = _messages.timestamp) === null || _messages$timestamp === void 0 ? void 0 : _messages$timestamp.toDate()).toLocaleString(), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"no-lastseen\",\n            children: \"No user visited this channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-right\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(DonutLarge, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleOpen,\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-body\",\n      children: messages.map(res => {\n        var _res$timestamp;\n\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `chat-message ${res.name === user.displayName && 'message-sender'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"username\",\n            children: res.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 63\n          }, this), res.text, /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"time-stamp\",\n            children: [\" \", timeago.format(new Date(res === null || res === void 0 ? void 0 : (_res$timestamp = res.timestamp) === null || _res$timestamp === void 0 ? void 0 : _res$timestamp.toDate())), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(InputEmoji, {\n          value: message,\n          onChange: setMessage,\n          placeholder: \"Type a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          type: \"submit\",\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      position: \"top,right\",\n      className: \"dialogue\",\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-dialog-title\",\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"simple-dialog-title\",\n        children: \" Account Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: clearMessages,\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Clear Your Message Chats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          autoFocus: true,\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            onClick: logOut,\n            primary: \"Logout of your Acccount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainChat, \"riK6hbvexrm1Mg74HTFXrtTUIeY=\", false, function () {\n  return [useParams, useStateValue];\n});\n\n_c = MainChat;\nexport default MainChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainChat\");","map":{"version":3,"sources":["/home/hix/PROJECTS/REACT/messaging-application/src/MainChat.js"],"names":["React","useState","useEffect","Avatar","IconButton","ChatIcon","MoreVertIcon","SearchIcon","DonutLarge","InsertEmoticon","useParams","db","auth","useStateValue","firebase","toast","timeago","makeStyles","Button","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","AddIcon","Typography","blue","InputEmoji","useStyles","avatar","backgroundColor","color","MainChat","date","open","setOpen","roomId","message","setMessage","messages","setMessages","user","dispatch","channelName","setChannel","img","setImg","handleOpen","handleClose","Math","floor","random","sendMessage","e","preventDefault","collection","doc","add","text","name","displayName","timestamp","firestore","FieldValue","serverTimestamp","audio","Audio","play","success","position","POSITION","TOP_RIGHT","orderBy","onSnapshot","snap","docs","map","data","logOut","signOut","type","clearMessages","get","then","querySnapshot","forEach","ref","delete","length","Date","toDate","toLocaleString","res","format"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport \"./MainChat.css\"\nimport {Avatar, IconButton} from \"@material-ui/core\"\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { DonutLarge, InsertEmoticon } from '@material-ui/icons'\nimport {useParams} from \"react-router-dom\"\nimport db from \"./firebase\"\nimport {auth} from \"./firebase\"\nimport {useStateValue} from './StateProvider'\nimport firebase from \"firebase\";\nimport {toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport * as timeago from 'timeago.js';\n\n\n// setting up dialog\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport InputEmoji from \"react-input-emoji\";\n\nconst useStyles = makeStyles({\n      avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n      },\n    });\n\n\n      function MainChat({date}) {\n      const[open,setOpen]=useState(false);\n      const {roomId}=useParams()\n      const [message,setMessage]=useState('')\n      const [messages,setMessages]=useState([])\n      const [{user},dispatch]=useStateValue()\n      const [channelName, setChannel]=useState('')\n      const[img,setImg]=useState('')\n     \n   \n      \n      //method to open dialog\n      const handleOpen=()=>{\n            setOpen(true)\n      }\n      // method to close dialog\n      const handleClose=()=>{\n            setOpen(false)\n      }\n      //react hook to change images in chatroom\n       useEffect(()=>{\n          setImg(Math.floor(Math.random()*5000))\n       },[roomId])\n\n      //function to send message to our database\n       const sendMessage=(e)=>{\n            e.preventDefault()\n            db.collection('Rooms').doc(roomId).collection('Messages').add({\n                  text:message,\n                  name:user.displayName,\n                  timestamp:firebase.firestore.FieldValue.serverTimestamp()\n            })\n           \n           const audio = new Audio('https://drive.google.com/uc?export=download&id=1M95VOpto1cQ4FQHzNBaLf0WFQglrtWi7');\n           audio.play();   \n           toast.success('Message Sent Successsfully',{position:toast.POSITION.TOP_RIGHT}) \n           setMessage('')\n       }\n\n       //function to fetch messages from db (React Hook)\n           useEffect(()=>{\n                  if(roomId){\n                        db.collection('Rooms').doc(roomId).collection('Messages').orderBy('timestamp','asc').onSnapshot(snap=>{\n                           setMessages(snap.docs.map(doc=>doc.data()))   \n                        })\n\n                      // code to fetch details about the channel we are working with\n                        db.collection('Rooms').doc(roomId).onSnapshot(snap=>{\n                          setChannel(snap.data().name)\n                        })\n\n                  }      \n           },[roomId])\n\n          //  function to logout of app\n           const logOut=()=>{\n             auth.signOut()\n             dispatch({\n              type:'SET_USER',\n              user:null\n             })\n             setOpen(false)\n           }\n\n           // function to clear chat messages\n           const clearMessages=()=>{\n                if(roomId){\n                db.collection('Rooms').doc(roomId).collection('Messages').get().then(function(querySnapshot) {\n                  querySnapshot.forEach(function(doc) {\n                      doc.ref.delete();\n                  });\n              });  \n             } \n             toast.success('Messages Cleared',{position:toast.POSITION.TOP_RIGHT})\n             setOpen(false)        \n           }\n\n  return (\n    <div className=\"chat-field\">\n        <div className=\"message-header\">\n        <Avatar src={`https://avatars.dicebear.com/api/human/${img}.svg`}/>\n          <div className=\"header_info\">\n          <h3>{channelName}</h3>\n          <p>Last seen &nbsp;\n            {messages.length>0 ?(\n              <small className=\"last-seen\">{new Date(messages[messages.length-1]?.timestamp?.toDate()).toLocaleString()} </small> \n            ):(\n               <small className=\"no-lastseen\">No user visited this channel</small>\n            )}   \n          </p>\n          </div>\n          <div className=\"message-right\">\n          <IconButton>\n            <DonutLarge/>\n            </IconButton>\n            <IconButton>\n            <ChatIcon/>\n            </IconButton>\n            <IconButton onClick={handleOpen}>\n            <MoreVertIcon/>\n            </IconButton>\n          </div>\n        </div>\n        <div className=\"message-body\">\n              {messages.map((res)=>(\n                  <p className={`chat-message ${res.name===user.displayName && 'message-sender'}`}>\n                  <span className=\"username\">{res.name}</span><br/>\n                        {res.text}\n                  <small className=\"time-stamp\"> {timeago.format(new Date(res?.timestamp?.toDate()))} </small>\n                  </p>\n              ))\n\n              }\n                          \n        </div>\n\n        <div className=\"message-footer\">\n        \n            <form>\n\n            <InputEmoji\n            value={message}\n            onChange={setMessage}\n            placeholder=\"Type a message\"\n           /> \n            <button onClick={sendMessage} type=\"submit\">Send Message</button>\n            </form>\n        </div>\n\n        {/* code to render dialogue */}\n   <Dialog position=\"top,right\" className=\"dialogue\" onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\"> Account Settings</DialogTitle>\n      <List>\n          <ListItem  onClick={clearMessages} button >\n            <ListItemAvatar>\n              <Avatar >\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Clear Your Message Chats\"/>\n          </ListItem>\n        <ListItem autoFocus button >\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText onClick={logOut} primary=\"Logout of your Acccount\" />\n        </ListItem>\n      </List>\n    </Dialog>\n\n\n    </div>\n  )\n}\n\nexport default MainChat\n"]},"metadata":{},"sourceType":"module"}