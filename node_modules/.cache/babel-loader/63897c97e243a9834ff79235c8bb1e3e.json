{"ast":null,"code":"var _jsxFileName = \"/home/hix/PROJECTS/REACT/messaging-application/src/SidebarChats.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./SidebarChats.css\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport Badge from '@material-ui/core/Badge';\nimport MailIcon from '@material-ui/icons/Mail';\nimport db from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SidebarChats({\n  channelname,\n  id\n}) {\n  _s();\n\n  var _messages;\n\n  const [randomNumber, setRandom] = useState('');\n  const [messages, setMessages] = useState([]); //algo to generate random number\n\n  useEffect(() => {\n    setRandom(Math.floor(Math.random() * 10000));\n  }, []); //useEffect to render last message in this channel\n\n  useEffect(() => {\n    if (id) {\n      db.collection('Rooms').doc(id).collection('Messages').orderBy('timestamp', 'asc').onSnapshot(snap => {\n        setMessages(snap.docs.map(doc => doc.data()));\n      });\n    }\n  }, [id]); // console.log(messages)\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    className: \"link\",\n    to: `/rooms/${id}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chats\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: `https://avatars.dicebear.com/api/human/${randomNumber}.svg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: channelname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 8\n        }, this), (messages === null || messages === void 0 ? void 0 : messages.length) > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_messages = messages[messages.length - 1]) === null || _messages === void 0 ? void 0 : _messages.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-array\",\n          children: \"This channel has no messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n        className: \"badge\",\n        badgeContent: messages === null || messages === void 0 ? void 0 : messages.length,\n        color: \"secondary\",\n        children: /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SidebarChats, \"4QSNruUmmydBHVNSI4+7mvKeWZU=\");\n\n_c = SidebarChats;\nexport default SidebarChats;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarChats\");","map":{"version":3,"sources":["/home/hix/PROJECTS/REACT/messaging-application/src/SidebarChats.js"],"names":["React","useEffect","useState","Avatar","IconButton","Link","Badge","MailIcon","db","SidebarChats","channelname","id","randomNumber","setRandom","messages","setMessages","Math","floor","random","collection","doc","orderBy","onSnapshot","snap","docs","map","data","length","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAO,oBAAP;AACA,SAAQC,MAAR,EAAgBC,UAAhB,QAAiC,mBAAjC;AACA,SAASC,IAAT,QAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,EAAP,MAAe,YAAf;;;AACA,SAASC,YAAT,CAAsB;AAACC,EAAAA,WAAD;AAAaC,EAAAA;AAAb,CAAtB,EAAwC;AAAA;;AAAA;;AACrC,QAAK,CAACC,YAAD,EAAcC,SAAd,IAAyBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,QAAD,EAAUC,WAAV,IAAuBb,QAAQ,CAAC,EAAD,CAArC,CAFqC,CAIpC;;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVY,IAAAA,SAAS,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,KAAzB,CAAD,CAAT;AACH,GAFQ,EAEP,EAFO,CAAT,CALoC,CASpC;;AACAjB,EAAAA,SAAS,CAAC,MAAI;AACR,QAAGU,EAAH,EAAM;AACJH,MAAAA,EAAE,CAACW,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BT,EAA3B,EAA+BQ,UAA/B,CAA0C,UAA1C,EAAsDE,OAAtD,CAA8D,WAA9D,EAA0E,KAA1E,EAAiFC,UAAjF,CAA4FC,IAAI,IAAE;AAChGR,QAAAA,WAAW,CAACQ,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAcL,GAAG,IAAEA,GAAG,CAACM,IAAJ,EAAnB,CAAD,CAAX;AACD,OAFD;AAGD;AACN,GANQ,EAMP,CAACf,EAAD,CANO,CAAT,CAVoC,CAiBpC;;AAEF,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,EAAE,EAAG,UAASA,EAAG,EAAxC;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACC,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAG,0CAAyCC,YAAa;AAApE;AAAA;AAAA;AAAA;AAAA,cADD,eAEA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,oBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,CAAAI,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEa,MAAV,IAAkB,CAAlB,gBACA;AAAA,iCAAIb,QAAQ,CAACA,QAAQ,CAACa,MAAT,GAAgB,CAAjB,CAAZ,8CAAI,UAA6BC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADA,gBAGC;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAWA,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,YAAY,EAAEd,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEa,MAAjD;AAAyD,QAAA,KAAK,EAAC,WAA/D;AAAA,+BACG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAvCQlB,Y;;KAAAA,Y;AAyCT,eAAeA,YAAf","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport \"./SidebarChats.css\"\nimport {Avatar, IconButton} from \"@material-ui/core\"\nimport { Link} from \"react-router-dom\";\nimport Badge from '@material-ui/core/Badge';\nimport MailIcon from '@material-ui/icons/Mail';\nimport db from \"./firebase\"\nfunction SidebarChats({channelname,id}) {\n   const[randomNumber,setRandom]=useState('')\n   const [messages,setMessages]=useState([])\n\n    //algo to generate random number\n    useEffect(()=>{\n        setRandom(Math.floor(Math.random()*10000))\n    },[])\n\n    //useEffect to render last message in this channel\n    useEffect(()=>{\n          if(id){\n            db.collection('Rooms').doc(id).collection('Messages').orderBy('timestamp','asc').onSnapshot(snap=>{\n              setMessages(snap.docs.map(doc=>doc.data()))\n            })\n          }\n    },[id])\n    // console.log(messages)\n\n  return (\n    <Link className=\"link\" to={`/rooms/${id}`}>\n     <div className=\"chats\">\n      <Avatar src={`https://avatars.dicebear.com/api/human/${randomNumber}.svg`}/>\n     <div className=\"chat-info\">\n       <h2>{channelname}</h2>\n       {messages?.length> 0 ?(\n        <p>{messages[messages.length-1]?.text}</p>\n       ):(\n         <p className=\"empty-array\">This channel has no messages</p>\n       )}\n       \n     </div>\n     <Badge className=\"badge\" badgeContent={messages?.length} color=\"secondary\">\n        <MailIcon />\n      </Badge>\n    </div>\n    </Link>\n   \n  )\n}\n\nexport default SidebarChats\n"]},"metadata":{},"sourceType":"module"}